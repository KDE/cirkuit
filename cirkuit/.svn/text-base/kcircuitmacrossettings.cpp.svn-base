// This file is generated by kconfig_compiler from kcircuitmacros.kcfg.
// All changes you do to this file will be lost.

#include "kcircuitmacrossettings.h"

#include <kglobal.h>
#include <QtCore/QFile>

class KCircuitMacrosSettingsHelper
{
  public:
    KCircuitMacrosSettingsHelper() : q(0) {}
    ~KCircuitMacrosSettingsHelper() { delete q; }
    KCircuitMacrosSettings *q;
};
K_GLOBAL_STATIC(KCircuitMacrosSettingsHelper, s_globalKCircuitMacrosSettings)
KCircuitMacrosSettings *KCircuitMacrosSettings::self()
{
  if (!s_globalKCircuitMacrosSettings->q) {
    new KCircuitMacrosSettings;
    s_globalKCircuitMacrosSettings->q->readConfig();
  }

  return s_globalKCircuitMacrosSettings->q;
}

KCircuitMacrosSettings::KCircuitMacrosSettings(  )
  : KConfigSkeleton( QLatin1String( "KCircuitMacrosrc" ) )
{
  Q_ASSERT(!s_globalKCircuitMacrosSettings->q);
  s_globalKCircuitMacrosSettings->q = this;
  setCurrentGroup( QLatin1String( "general" ) );

  KConfigSkeleton::ItemInt  *itemRefreshInterval;
  itemRefreshInterval = new KConfigSkeleton::ItemInt( currentGroup(), QLatin1String( "refreshInterval" ), mRefreshInterval, 5000 );
  addItem( itemRefreshInterval, QLatin1String( "refreshInterval" ) );
  KConfigSkeleton::ItemPath  *itemManualPath;
  itemManualPath = new KConfigSkeleton::ItemPath( currentGroup(), QLatin1String( "manualPath" ), mManualPath, QLatin1String( "/usr/local/lib/cct/CMman.pdf" ) );
  addItem( itemManualPath, QLatin1String( "manualPath" ) );
  KConfigSkeleton::ItemPath  *itemExamplesPath;
  itemExamplesPath = new KConfigSkeleton::ItemPath( currentGroup(), QLatin1String( "examplesPath" ), mExamplesPath, QLatin1String( "/usr/local/lib/cct/CMex.pdf" ) );
  addItem( itemExamplesPath, QLatin1String( "examplesPath" ) );
}

KCircuitMacrosSettings::~KCircuitMacrosSettings()
{
}

